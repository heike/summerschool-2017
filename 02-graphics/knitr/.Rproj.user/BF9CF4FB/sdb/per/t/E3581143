{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Plotting Map Data\"\nsubtitle: \"Midwest Big Data Summer School\"\nauthor: \"Heike Hofmann (hofmann@iastate.edu, @heike_hh), Eric Hare\"\ndate: \"`r Sys.Date()`\"\noutput:\n  ioslides_presentation:\n    transition: default\n    widescreen: true\ncss:\n  styles.css\n---\n\n```{r, echo=FALSE, message=FALSE}\nlibrary(knitr)\nopts_knit$set(progress = TRUE, verbose = TRUE, width = 50)\n\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n## States Data\n\nTo make a map, let's load up the states data and take a look:\n\n```{r, message = FALSE}\nstates <- map_data(\"state\")\n\nhead(states)\n```\n\n## Basic Map Data\n\nWhat needs to be in the data set in order to plot a basic map?\n  \n- Need latitude/longitude points for all map boundaries\n- Need to know which boundary group all lat/long points belong\n- Need to know the order to connect points within each group\n\n## Data for Building Basic State Map\n\nOur *states* data has all necessary information\n\n## A Basic (Rather Hideous) Map\n\nA bunch of latitude longitude points...\n\n```{r, fig.height=4, fig.width=7}\nqplot(long, lat, geom = \"point\", data = states)\n```\n\n## A Bit Better of a Map\n\n... that are connected with lines in a very specific order.\n\n```{r, fig.height=4, fig.width=7}\nqplot(long, lat, geom = \"path\", data = states, group = group) + \n    coord_map()\n```\n\n## Polygon instead of Path\n\n```{r, fig.height=4, fig.width=7}\nqplot(long, lat, geom = \"polygon\", data = states, group = group) + \n    coord_map()\n```\n\n\n## Incorporating Information About States\n\nWe want to incorporate additional information into the plot:\n\n- Add other geographic information by adding geometric layers to the plot\n- Add non-geopgraphic information by altering the fill color for each state\n    - Use `geom = \"polygon\"` to treat states as solid shapes to add color\n    - Incorporate numeric information using color shade or intensity\n    - Incorporate categorical informaion using color hue\n    \n## Categorical Information Using Hue\n\nIf a categorical variable is assigned as the fill color then `qplot` will assign different hues for each category. Let's load in a state regions dataset:\n\n```{r, tidy= FALSE}\nstatereg <- read.csv(\"https://raw.githubusercontent.com/heike/rwrks/gh-pages/summerschool/data/statereg.csv\", stringsAsFactors = FALSE)\n\nhead(statereg)\n```\n\n## Joining Data\n\nWe need to `join` or `merge` our original states data with this new information on the regions. We can use the `left_join` function to do so (more about this later):\n\n```{r}\nstates.class.map <- left_join(states, statereg, by = c(\"region\" = \"State\"))\nhead(states.class.map)\n```\n\n## Plotting the Result\n\n```{r, fig.height=4, fig.width=7}\nqplot(long, lat, geom = \"polygon\", data = states.class.map, \n      group = group, fill = StateGroups, colour = I(\"black\")) + \n    coord_map() \n```\n\n## Numerical Information Using Shade and Intensity\n\nTo show how was can add numerical information to map plots we will use the BRFSS data\n\n- Behavioral Risk Factor Surveillance System\n- 2008 telephone survey run by the Center for Disease Control (CDC)\n- Ask a variety of questions related to health and wellness\n- Cleaned data with state aggregated values posted on website \n\n## BRFSS Data Aggregated by State\n\n```{r}\nstates.stats <- read.csv(\"http://heike.github.io/rwrks/summerschool/data/states.stats.csv\", stringsAsFactors = FALSE)\nhead(states.stats)\n```\n\n## We must join this data again\n\n```{r}\nstates.map <- left_join(states, states.stats, by = c(\"region\" = \"state.name\"))\nhead(states.map)\n```\n\n## Shade and Intensity\n\nAverage number of days in the last 30 days of insufficient sleep by state\n\n```{r, fig.height=4, fig.width=9.5}\nqplot(long, lat, geom = \"polygon\", data = states.map, \n      group = group, fill = avg.qlrest2) + coord_map()\n```\n\n## BRFSS Data Aggregated by State\n\n```{r}\nstates.sex.stats <- read.csv(\"http://heike.github.io/rwrks/02-r-graphics/data/states.sex.stats.csv\", stringsAsFactors = FALSE)\nhead(states.sex.stats)\n```\n\n## One More Join\n\n```{r}\nstates.sex.map <- left_join(states, states.sex.stats, by = c(\"region\" = \"state.name\"))\nhead(states.sex.map)\n```\n\n## Adding Information\n\nAverage number of alcoholic drinks per day by state and gender\n\n```{r, fig.height=4, fig.width=9.5}\nqplot(long, lat, geom = \"polygon\", data = states.sex.map, \n      group = group, fill = avg.drnk) + coord_map() + \n    facet_grid(. ~ sex)\n```\n\n## Your Turn {data-background=#527a7a}\n\n- Use `left_join` to combine child healthcare data with maps information. You can load in the child healthcare data with:\n\n```{r}\nstates.health.stats <- read.csv(\"http://heike.github.io/rwrks/summerschool/data/states.health.stats.csv\")\n```\n\n- Use `qplot` to create a map of child healthcare undercoverage rate by state\n\n## Cleaning Up Your Maps\n\nUse ggplot2 options to clean up your map!\n\n- Adding Titles `+ ggtitle(...)`\n- Might want a plain white background `+ theme_bw()`\n- Extremely familiar geography may eliminate need for latitude and longitude axes `+ theme_map()`\n- Want to customize color gradient `+ scale_fill_gradient2(...)`\n- Keep aspect ratios correct `+ coord_map()`\n\n## Cleaned Up Map\n\n```{r, fig.height=3, fig.width=7}\nlibrary(ggthemes)\nqplot(long, lat, geom=\"polygon\", data = states.map, group = group, fill = avg.drnk) + \n  coord_map() +  \n  scale_fill_gradient2(limits = c(1.5, 3),low = \"lightgray\", high = \"red\") + \n  theme_map()  +\n  ggtitle(\"Map of Average Number of Alcoholic Beverages Consumed Per Day by State\") +\n  theme(legend.position=\"right\")\n```\n\n## Your Turn {data-background=#527a7a}\n\nUse options to polish the look of your map of child healthcare undercoverage rate by state!\n",
    "created" : 1466626743612.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2062955103",
    "id" : "E3581143",
    "lastKnownWriteTime" : 1466631391,
    "last_content_update" : 1466631391688,
    "path" : "~/rwrks/summerschool/02-graphics/knitr/2-PlotMaps.Rmd",
    "project_path" : "2-PlotMaps.Rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}