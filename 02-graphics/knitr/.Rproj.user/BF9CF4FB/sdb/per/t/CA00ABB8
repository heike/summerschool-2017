{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Plotting Using Layers\"\nsubtitle: \"Midwest Big Data Summer School\"\nauthor: \"Heike Hofmann (hofmann@iastate.edu, @heike_hh), Eric Hare\"\ndate: \"`r Sys.Date()`\"\noutput:\n  ioslides_presentation:\n    transition: default\n    widescreen: true\ncss:\n  styles.css\n---\n\n```{r, echo=FALSE, message=FALSE}\nlibrary(ggplot2)\n\nstates <- map_data(\"state\")\n```\n\n## Deepwater Horizon Oil Spill\n\n![](https://raw.githubusercontent.com/heike/rwrks/gh-pages/summerschool/02-graphics/knitr/images/satelitepicBPoilspill.png)\n\n## Datasets\n\nNOAA Data:\n\n- National Oceanic and Atmospheric Administration\n- Temperature and Salinity Data in Gulf of Mexico\n- Measured using Floats, Gliders and Boats\n\nUS Fisheries and Wildlife Data:\n\n- Animal Sightings on the Gulf Coast\n- Birds, Turtles and Mammals\n- Status: Oil Covered or Not\n\nBoth data sets have geographic coordinates for ever observation\n\n## Loading NOAA Data\n\nNOAA data is a .rdata file so we need to read it specially:\n\n1. Download the data from http://heike.github.io/rwrks/summerschool/data/noaa.rdata\n2. Run the `getwd()` command to find your current working directory\n3. Place noaa.rdata in the directory from step 2.\n4. Run the command below:\n\n```{r}\nload(\"noaa.rdata\")\n```\n\n\n## Floats\n\nLets take a peek at the top of the floats NOAA data.\n\n```{r}\nhead(floats, n = 2)\n```\n\n## Floats Plot\n\n```{r, fig.height=4, fig.width=7}\nqplot(Longitude, Latitude, colour = callSign, data = floats) + \n    coord_map()\n```\n\n## Gliders\n\n```{r, fig.height=4, fig.width=7}\nqplot(Longitude, Latitude, colour = callSign, data = gliders) + \n    coord_map()\n```\n\n## Boats\n\n```{r, fig.height=4, fig.width=7}\nqplot(Longitude, Latitude, colour = callSign, data = boats) + \n    coord_map()\n```\n\n## Layering\n\nThis data has the same context - a common time and common place\n\n- Want to aggregate information from different sources onto a common plot\n- Start with a common background the lat/long grid\n- With `ggplot2` we will superimpose data onto this grid in layers\n\n## Layers\n\nTo give you an idea...\n\n```{r, fig.height=3, fig.width=7, warning=FALSE}\nggplot() +\n    geom_path(data = states, aes(x = long, y = lat, group = group)) + \n    geom_point(data = floats, aes(x = Longitude, y = Latitude, colour = callSign)) +   \n    geom_point(aes(x, y), shape = \"x\", size = 5, data = rig) + \n    geom_text(aes(x, y), label = \"BP Oil Rig\", \n              size = 5, data = rig, hjust = -0.1) + \n    xlim(c(-91, -80)) + ylim(c(22,32)) + coord_map()\n```\n\n## More Layering\n\n- Most maps (and many plots) have multiple layers of data. The layers may be from the same or different datasets.\n- ggplot2 builds around this same idea. Very easy to add additional layers to the plot. To do this we need to understand a little more about the underlying theory...\n\n## What is a Plot?\n\n- A default dataset \n- A coordinate system\n- layers of geometric objects (geoms)\n- A set of aesthetic mappings (taking information from the data and converting into an attribute of the plot)\n- A scale for each aesthetic\n- A facetting specification (multiple plots based on subsetting the data)\n\n## Floats Decomposed\n\n<div class=\"columns-2\">\n- **Data**: floats\n- **Mappings**: \n\naesthetic mapping\n--------- ---------\nx         Longitude\ny         Latitude\ncolor     CallSign\n\n- **Scales**:\n\naesthetic scale\n--------- ---------\nx         continuous\ny         continuous\ncolor     discrete\n\n- **Layers**: Points\n- **Facetting**: None\n</div>\n\n## `qplot()` vs `ggplot()`\n\n`qplot()` stands for \"quickplot\":\n\n- Automatically chooses default settings to make life easier\n- Less control over plot construction\n\n`ggplot()` stands for \"grammar of graphics plot\"\n\n- Constructs the plot using components listed in previous slides\n\n## `qplot()` and `ggplot()` for Floats\n\nTwo ways to construct the same plot for float locations:\n\n```{r, eval=FALSE}\nqplot(Longitude, Latitude, colour = callSign, data = floats) \n```\n\nOr:\n\n```{r, eval=FALSE}\nggplot(data = floats, \n       aes(x = Longitude, y = Latitude, colour = callSign)) +\n  geom_point() + \n  scale_x_continuous() + \n  scale_y_continuous() + \n  scale_colour_discrete()\n```\n\n## We can shorten that a bit\n\nWe fortunately don't need to be so verbose - Even `ggplot()` will automatically pick default scales:\n\n```{r, fig.height=3, fig.width=7}\nggplot(data = floats, \n       aes(x = Longitude, y = Latitude, colour = callSign)) +\n  geom_point()\n```\n\n## Your Turn {data-background=#527a7a}\n\nFind the `ggplot()` statement that creates this plot:\n\n```{r, fig.height=4, fig.width=7, echo=FALSE, warning=FALSE}\nggplot(aes(x = Depth, y = Temperature, colour = callSign), data = floats) + geom_point()\n```\n\n## What is a Layer?\n\nA layer added `ggplot()` can be a geom...\n\n- The type of geometric object\n- The statistic mapped to that object\n- The data set from which to obtain the statistic\n\n... or a position adjustment to the scales\n\n- Changing the axes scale\n- Changing the color gradient\n\n## Layer Examples\n\nPlot               Geom             Stat\n------------------ ---------------- -----------------\nScatterplot        point            identity\nHistogram          bar              bin count\nSmoother           line + ribbon    smoother function\nBinned Scatterplot rectange + color 2d bin count\n\nMore geoms described at http://docs.ggplot2.org/current/\n\n## Piecing Things Together\n\nWant to build a map using NOAA data\n\n- Coordinate system (mapping Long-Lat to X-Y)\n- Add layer of state outlines\n- Add layer of points for float locations\n- Add layers for Oil Rig marker and label\n- Adjust the range of x and y scales\n\n## The Result\n\n```{r, fig.height=3, fig.width=7, warning=FALSE}\nggplot() +\n    geom_path(data = states, aes(x = long, y = lat, group = group)) + \n    geom_point(data = floats, aes(x = Longitude, y = Latitude, colour = callSign)) +   \n    geom_point(aes(x, y), shape = \"x\", size = 5, data = rig) + \n    geom_text(aes(x, y), label = \"BP Oil Rig\", size = 5, data = rig, hjust = -0.1) + \n    xlim(c(-91, -80)) + \n    ylim(c(22, 32)) + coord_map()\n```\n\n## Your Turn {data-background=#527a7a}\n\n1. Read in the animal.csv data:\n\n```{r}\nanimal <- read.csv(\"http://heike.github.io/rwrks/02-r-graphics/data/animal.csv\")\n```\n\n2. Plot the location of animal sightings on a map of the region\n3. On this plot, try to color points by class of animal and/or status of animal\n4. **Advanced**: Could we indicate time somehow?\n\n\n## One more map ...\n\nUsing the `ggmap` package, we can download satellite images using the  Google Maps API for specified regions of the world\n\n```{r}\nlibrary(ggmap)\ngmap <- get_map(location=c(rig$x, rig$y), zoom=6)\n```\n\n##\n\n```{r}\nggmap(gmap, extent = 'normal') + \n  geom_point(aes(Longitude, Latitude), shape=\"+\", size=5, colour=\"black\", data=subset(animal, Condition==\"Dead\")) +\n  ggtitle(\"Crosses indicate locations of sightings of dead bird\")\n```",
    "created" : 1466631548604.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4269857721",
    "id" : "CA00ABB8",
    "lastKnownWriteTime" : 1466633548,
    "last_content_update" : 1466633548280,
    "path" : "~/rwrks/summerschool/02-graphics/knitr/3-Layers.Rmd",
    "project_path" : "3-Layers.Rmd",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}